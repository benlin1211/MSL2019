#include "stm32l476xx.h"
//#define RCC_CR_HSION 1
//#define RCC_CR_HSIRDY 1

#define SET_REG(REG,SELECT,VAL) {((REG)=((REG)&(~(SELECT)))|(VAL));};
//REG: register address
//SELECT:selected region sets to 1

void GPIO_init();
void Delay1sWith4MHz();
void SystemClock_Config();

int main(){
	SystemClock_Config();
	GPIO_init();
	while(1){
		// make LED light
		Delay1sWith4MHz();
		GPIOA->BSRR = 0b100001; //set these gpio addresss to 1
		// make LED dark
		Delay1sWith4MHz();
		GPIOA->BRR = 0b100001; //set these gpio addresss to 0
	}
}

void SystemClock_Config(){

/*
	// Use HSI16 16MHz as system (main) clock
	RCC->CR |= RCC_CR_HSION;// turn on HSI16 oscillator
	while( (RCC->CR & RCC_CR_HSIRDY) == 0);//check HSI16 ready
	//SET_REG(RCC->CFGR, RCC_CFGR_HPRE, 0b1000<<4);//n=0~7:origin, n=8~15:divide by 2^(n-7)
	//SYSCLK divide by 2. SYSCLK = 16MHz/2 = 8Mhz
	SET_REG(RCC->CFGR, RCC_CFGR_HPRE, 0);
*/
	// Use PLL (from MSI) as system (main) clock

	RCC->CR |= RCC_CR_PLLON;// turn on PLL oscillator
	while( (RCC->CR & RCC_CR_PLLRDY) == 0);//check PLL ready
	SET_REG(RCC->CFGR, RCC_CFGR_SW, 11);// PLL set as clock
	SET_REG(RCC->CFGR, RCC_CFGR_SWS, 11);// PLL set as clock
	SET_REG(RCC->CFGR, RCC_CFGR_HPRE, 0);// Origin clk rate

	SET_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLP, 1);
	SET_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLQ, 1);
	SET_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLR, 1);
	if((RCC->CR & RCC_CR_PLLRDY) == 0)
		return;

//APB1 prescaler not divide
//APB2 prescaler not divide

}
void Delay1sWith4MHz(){

	delay();
}
