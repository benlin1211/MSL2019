    .syntax unified
    .cpu cortex-m4
    .thumb
    .data
      leds: .byte 0
    .text
    .global main
// In STM32L4 system all GPIO port connect on AHB2 bus
// Port	A system memory address start from 0x48000000
// Port	B from 48000400
// each variable has its own offset address
    .equ RCC_AHB2ENR, 0x4002104C //address offset: 4C

    .equ GPIOB_MODER, 0x48000400  //address offset: 00
    .equ GPIOB_OTYPER, 0x48000404  //address offset: 04
    .equ GPIOB_OSPEEDR, 0x48000408  //address offset: 08
    .equ GPIOB_PUPDR, 0x4800040C  //address offset: 0C // pull_up address
    .equ GPIOB_ODR, 0x48000414  //address offset: 14
// r0:addr value loader
// r1:addr

	.equ GPIOC_MODER, 0x48000800
    .equ GPIOC_IDR, 0x48000810

main:
    bl    GPIO_init
    movs  r7, #0b1000 //0b'00001000
    ldr   r6, =leds
    movs  r8, #1

Loop:
//r1 for GPIOB_ODR addr, don't move
//r2 for GPIOC_IDR addr, don't move
//r6, r7, r8 for led control status, don't move
//r8=+-1:left or right
//r8=0:stop
//r3 for button status, don't move

    strb  r7, [r6]
    // r8 = +-1: left or right
    // move left
    cmp   r8, #1
    it    eq
    lsleq r7, #1
    // move right
    cmp   r8, #-1
    it    eq
    lsreq r7, #1

    cmp   r7, #16 // left most : 00010000=>00110000
    it    eq
    addeq r7, #8
    cmp   r7, #192 // (1)1000 0000
    it    eq
    moveq r8, #-1
    cmp   r7, #24 // 0001 1000
    it    eq
    moveq r8, #1



	ldr 	r4,	[r2]
	movs 	r4,	#1  //                    r13
	lsl 	r4,	#13 // 00000001 => 0000(0001)000
	ands 	r3, r3,	r4 // extract pc13 status


	beq 	do_pushed //all 0
	bl    DisplayLED
    bl    delay
do_pushed:

    b	  Loop


DisplayLED:
// DisplayLED or not

    ldr  r5, [r6]
    eor  r5, r5, #0b1111000 //0b'01111000
    strh r5, [r1]
    bx   lr


GPIO_init:
    movs    r0, #0x7 //0000000(0110) :active C&B&A block
    ldr     r1, =RCC_AHB2ENR
    str     r0, [r1]
						//                  r6 r5r4 r3
    movs    r0, #0x1540 //00001540 = 0000(0001 0101 0100 0000)
    //(01): general purpose
    ldr     r1, =GPIOB_MODER
    ldr     r2, [r1]
    //mask: keep from modifying the origin setting
    					//FFFFC03F = FFFF(1100 0000 0011 1111)
    and     r2, #0xFFFFC03F //mask
    orrs    r2, r2, r0
    str     r2, [r1]

    movs    r0, #0x2A80
   	//(10):high speed
    ldr     r1, =GPIOB_OSPEEDR
    strh    r0, [r1]

    //button//

	ldr 	r1,	=GPIOC_MODER
	ldr 	r0,	[r1]		 //               r13
	ldr 	r2,	=#0xF3FFFFFF //Set Pin13 :F(0010)FFFFFF
	and 	r0,	r2
	str 	r0,	[r1]

	ldr 	r2,	=GPIOC_IDR

	//end botton//

    ldr     r1, =GPIOB_ODR

	bx      lr
delay:
    LDR   R3, =2000
	L1: LDR R4,	=250
	L2: SUBS R4, #1
	BNE   L2
	SUBS  R3, #1
	BNE   L1
	BX    LR



